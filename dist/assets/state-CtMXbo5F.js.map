{"version":3,"file":"state-CtMXbo5F.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  })?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","keys","sort","reduce","result","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","equalItems","i","includes","value","Array","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","toString","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_a","super","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_b","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","resolve","_resolve","_reject","finalize","assign","catch","reason","pendingThenable","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_c","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","__privateMethod","updatedAt","manual","setState","setStateOptions","reset","some","observer","resolveEnabled","enabled","isDisabled","getObserversCount","getCurrentResult","isStaleByTime","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","context","fetchFn","queryFnContext","persister","behavior","onFetch","onSettled","WeakSet","action","reducer","onQueryUpdate","QueryCache","_e","_queries","Map","build","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_f","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","React.createContext","createContext","QueryClientProvider","children","React.useEffect","Provider"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}